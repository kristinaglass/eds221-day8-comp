---
title: "eds221-day8-comp1"
format: html
editor: visual
---

## Review basics of ggplot

```{r}
# General use packages:
library(tidyverse)
library(here)
library(janitor)

# Specifically for plots:
library(patchwork)
library(ggrepel)
library(gghighlight)
library(paletteer)
library(ggExtra)
library(ggbeeswarm)

# And for another dataset we'll explore:
library(gapminder)

# Spatial
library(sf)
```

```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))
```

Do some data wrangling to create a new subset from lizards where you:

1.  limist data to only contain western whiptails, colorado checkered, and eastern fence lizards
2.  Add a new column with total length converted to cm
3.  group by species and site
4.  return summary table with mean total length and sd of total length by soecies and site

```{r}
lizards_length <- lizards %>% 
  filter(common_name %in% c("western whiptail", "colorado checkered", "eastern fence")) %>% 
  mutate(total_length_cm = total_length / 10) %>% 
  group_by(common_name, site) %>% 
  summarise(mean_length = mean(total_length_cm, na.rm = TRUE), sd_length = sd(total_length_cm, na.rm = TRUE))
```

```{r}
ggplot(lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name)) +
  facet_wrap(~ common_name)
```

```{r}
## using dplyr::count to find total number of lizards by common name
lizard_counts <- lizards %>% 
  dplyr::count(common_name)

## same can also be acheived with
lizards %>% 
  group_by(common_name) %>% 
  summarise(n)
```

```{r}
ggplot(data = lizard_counts) +
  geom_col(aes(y = fct_reorder(common_name, n), x = n))
```

```{r}
ggplot(lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = weight)) +
  scale_y_continuous(limits = c(0, 100),
                     breaks = seq(from = 0, to = 100, by = 20),
                     expand = c(0,0)) +
  scale_color_gradientn(colors = c("yellow", "orange", "purple"))
 
```
